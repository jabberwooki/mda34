<?php
/**
 * @file
 * Code for the Resources feature.
 */

include_once 'mda_resources.features.inc';

/**
 * Implements hook_form_FORM_ID_alter().
 */
function mda_resources_form_resource_node_form_alter(&$form, &$form_state, $form_id) {
	$form['#groups']['group_additionnal_settings']->weight = 1000;
	$form['#validate'][] = 'mda_resource_form_validate';
}

/**
 * Custom form validation handler for resource fields.
 */
function mda_resource_form_validate($form, &$form_state) {
	$isbn = mda_isbn_clean_data($form_state['values']['field_isbn']['und'][0]['value']);
	
	if ($isbn != '' && !mda_isbn_check_10($isbn) && !mda_isbn_check_13($isbn)) {
		if (strlen($isbn) != 10 && strlen($isbn) != 13) {
			$message = t('"%isbn" isn\'t a valid ISBN number. A valid ISBN number has 10 or 13 digits.', array('%isbn' => $isbn));
		}
		else {
			if (strlen($isbn) == 10 && !mda_isbn_check_10($isbn)) {
				$message = t('"%isbn" isn\'t a valid 10 digit ISBN number.', array('%isbn' => $isbn));
			}
	
			if (strlen($isbn) == 13 && !mda_isbn_check_13($isbn)) {
				$message = t('"%isbn" isn\'t a valid 13 digit ISBN number.', array('%isbn' => $isbn));
			}
		}
		form_set_error('homonym', $message);
	}
}

/**
 * Remove all non-valid characters.
 *
 * @param $isbn
 *   The ISBN number typed by the user.
 *
 * @return
 *   The ISBN number without invalid characters.
 */
function mda_isbn_clean_data($isbn) {
	return preg_replace('/[^xX0-9]/', "", $isbn);
}

/**
 * Check if the ISBN number is a valid 10 digit.
 *
 * @param $isbn
 *   The ISBN number with only valid characters.
 *
 * @return
 *   True if it's a valid 10 digit ISBN number, false otherwise.
 */
function mda_isbn_check_10($isbn) {
	if (strlen($isbn) < 10) {
		return FALSE;
	}
	$check = 0;

	for ($i = 0; $i < 9; $i++) {
		$check += (10 - $i) * $isbn[$i];
	}

	$tenth = $isbn[9];
	$check += (strtoupper($tenth) == 'X') ? 10 : $tenth;
	return $check % 11 == 0;
}

/**
 * Check if the ISBN number is a valid 13 digit.
 *
 * @param $isbn
 *   The ISBN number with only valid characters.
 *
 * @return
 *   True if it's a valid 13 digit ISBN number, false otherwise.
 */
function mda_isbn_check_13($isbn) {
	if (strlen($isbn) < 13) {
		return FALSE;
	}
	$check = 0;

	for ($i = 0; $i < 13; $i+=2) {
		$check += $isbn[$i];
	}

	for ($i = 1; $i < 12; $i+=2) {
		$check += 3 * $isbn[$i];
	}

	return ($check % 10) == 0;
}

/**
 * Implements hook_node_view().
 */
function mda_resources_node_view($node, $view_mode, $langcode) {
	if ($node->type == 'resource' && $view_mode == 'full' && !empty($node->field_isbn)) {
		$node->content['field_isbn'][0]['#markup'] = 'ISBN ' . $node->content['field_isbn'][0]['#markup'];
	}
}